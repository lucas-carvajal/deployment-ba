AWSTemplateFormatVersion: 2010-09-09
Parameters:
  VpcId:
    Type: String
    Default: "vpc-0593add1b5808f108"
  Subnet:
    Type: String
    Default: "subnet-0197bc91e37f0c461"
  CustomerCoreServiceName:
    Type: String
    Default: "customer-core"
  CustomerManagementBackendName:
    Type: String
    Default: "customer-management-backend"
  CustomerSelfServiceBackendName:
    Type: String
    Default: "customer-self-service-backend"
  PolicyManagementBackendName:
    Type: String
    Default: "policy-management-backend"
  RiskManagementServerName:
    Type: String
    Default: "risk-management-server"
  SpringBootAdminName:
    Type: String
    Default: "spring-boot-admin"
  CustomerManagementFrontendName:
    Type: String
    Default: "customer-management-frontend"
  CustomerSelfServiceFrontendName:
    Type: String
    Default: "customer-self-service-frontend"
  PolicyManagementFrontendName:
    Type: String
    Default: "policy-management-frontend"
  RiskManagementClientName:
    Type: String
    Default: "risk-management-client"

Resources:
  # NAMESPACE, CLUSTER, LOG GROUP, TASK EXECUTION ROLE
#  LakesideNamespace:
#    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
#    Properties:
#      Name: lakeside.local
#      Vpc: !Ref VpcId
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: lakeside-cluster
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: lakeside-log-group
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: lakeside-backend-execution-role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # SECURITY GROUPS
  BackendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: BackendSecurityGroup
      GroupDescription: Security Group for the Backend Services
      #      SecurityGroupIngress:
      ##         Allow incoming traffic from the frontend service security group
      #        - SourceSecurityGroupId: !Ref FrontendSecurityGroup
      #          IpProtocol: -1
      VpcId: !Ref VpcId
  FrontendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for frontend services.
#      SecurityGroupIngress:
#        # Allow incoming traffic from the open internet on port 80 (or any other required ports)
#        - CidrIp: 0.0.0.0/0
#          FromPort: 80
#          ToPort: 80
      SecurityGroupEgress:
        # Allow outgoing traffic to the backend service security group
        - DestinationSecurityGroupId: !Ref BackendSecurityGroup
          IpProtocol: -1
      VpcId: !Ref VpcId
  FrontendIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt FrontendSecurityGroup.GroupId
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0
  FrontendEgressRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !GetAtt FrontendSecurityGroup.GroupId
      IpProtocol: -1
      DestinationSecurityGroupId: !GetAtt BackendSecurityGroup.GroupId



  # TODO REMOVE
  BEIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt BackendSecurityGroup.GroupId
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0



  # CUSTOMER CORE
  CustomerCoreTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref CustomerCoreServiceName
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Cpu: 256
      Memory: 512
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        OperatingSystemFamily: LINUX
        CpuArchitecture: ARM64
      ContainerDefinitions:
        - Name: !Ref CustomerCoreServiceName
          Image: 063725538836.dkr.ecr.eu-central-1.amazonaws.com/customer-core:latest
          Environment:
            - Name: SPRING_BOOT_ADMIN_CLIENT_URL
              Value: "localhost:9000"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: eu-central-1
              awslogs-stream-prefix: !Ref CustomerCoreServiceName
          PortMappings:
            - ContainerPort: 8110
              HostPort: 8110
  CustomerCoreECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Ref CustomerCoreServiceName
      TaskDefinition: !Ref CustomerCoreTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref BackendSecurityGroup
          Subnets:
            - !Ref Subnet

  # CUSTOMER MANAGEMENT BACKEND
  CustomerManagementBackendECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref CustomerManagementBackendName
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Cpu: 256
      Memory: 512
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        OperatingSystemFamily: LINUX
        CpuArchitecture: ARM64
      ContainerDefinitions:
        - Name: !Ref CustomerManagementBackendName
          Image: 063725538836.dkr.ecr.eu-central-1.amazonaws.com/customer-management-backend:latest
          Environment:
            - Name: SPRING_BOOT_ADMIN_CLIENT_URL
              Value: "localhost:9000"
            - Name: CUSTOMERCORE_BASEURL
              Value: "localhost:8110"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: eu-central-1
              awslogs-stream-prefix: !Ref CustomerManagementBackendName
          PortMappings:
            - ContainerPort: 8100
              HostPort: 8100
  CustomerManagementBackendECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Ref CustomerManagementBackendName
      TaskDefinition: !Ref CustomerManagementBackendECSTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref BackendSecurityGroup
          Subnets:
            - !Ref Subnet


  # CUSTOMER SELF SERVICE BACKEND
  CustomerSelfServiceBackendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref CustomerSelfServiceBackendName
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Cpu: 256
      Memory: 512
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        OperatingSystemFamily: LINUX
        CpuArchitecture: ARM64
      ContainerDefinitions:
        - Name: !Ref CustomerSelfServiceBackendName
          Image: 063725538836.dkr.ecr.eu-central-1.amazonaws.com/customer-self-service-backend:latest
          Environment:
            - Name: SPRING_BOOT_ADMIN_CLIENT_URL
              Value: "localhost:9000"
            - Name: CUSTOMERCORE_BASEURL
              Value: "localhost:8110"
            - Name: POLICYMANAGEMENT_TCPBROKERBINDADDRESS
              Value: "localhost:61616"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: eu-central-1
              awslogs-stream-prefix: !Ref CustomerSelfServiceBackendName
          PortMappings:
            - ContainerPort: 8080
              HostPort: 8080
  CustomerSelfServiceBackendECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Ref CustomerSelfServiceBackendName
      TaskDefinition: !Ref CustomerSelfServiceBackendTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref BackendSecurityGroup
          Subnets:
            - !Ref Subnet


  # POLICY MANAGEMENT BACKEND
  PolicyManagementBackendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref PolicyManagementBackendName
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Cpu: 256
      Memory: 512
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        OperatingSystemFamily: LINUX
        CpuArchitecture: ARM64
      ContainerDefinitions:
        - Name: !Ref PolicyManagementBackendName
          Image: 063725538836.dkr.ecr.eu-central-1.amazonaws.com/policy-management-backend:latest
          Environment:
            - Name: SPRING_BOOT_ADMIN_CLIENT_URL
              Value: "localhost:9000"
            - Name: CUSTOMERCORE_BASEURL
              Value: "localhost:8110"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: eu-central-1
              awslogs-stream-prefix: !Ref PolicyManagementBackendName
          PortMappings:
            - ContainerPort: 8090
              HostPort: 8090
            - ContainerPort: 61613
              HostPort: 61613
            - ContainerPort: 61616
              HostPort: 61616
  PolicyManagementBackendECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Ref PolicyManagementBackendName
      TaskDefinition: !Ref PolicyManagementBackendTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref BackendSecurityGroup
          Subnets:
            - !Ref Subnet


  # RISK MANAGEMENT SERVER
  RiskManagementServerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref RiskManagementServerName
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Cpu: 256
      Memory: 512
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        OperatingSystemFamily: LINUX
        CpuArchitecture: ARM64
      ContainerDefinitions:
        - Name: !Ref RiskManagementServerName
          Image: 063725538836.dkr.ecr.eu-central-1.amazonaws.com/risk-management-server:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: eu-central-1
              awslogs-stream-prefix: !Ref RiskManagementServerName
          PortMappings:
            - ContainerPort: 50051
              HostPort: 50051
  RiskManagementServerECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Ref RiskManagementServerName
      TaskDefinition: !Ref RiskManagementServerTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref BackendSecurityGroup
          Subnets:
            - !Ref Subnet


  # SPRING BOOT ADMIN
  SpringBootAdminTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref SpringBootAdminName
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Cpu: 256
      Memory: 512
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        OperatingSystemFamily: LINUX
        CpuArchitecture: ARM64
      ContainerDefinitions:
        - Name: !Ref SpringBootAdminName
          Image: 063725538836.dkr.ecr.eu-central-1.amazonaws.com/spring-boot-admin:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: eu-central-1
              awslogs-stream-prefix: !Ref SpringBootAdminName
          PortMappings:
            - ContainerPort: 9000
              HostPort: 9000
  SpringBootAdminECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Ref SpringBootAdminName
      TaskDefinition: !Ref SpringBootAdminTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref BackendSecurityGroup
          Subnets:
            - !Ref Subnet


















  # CUSTOMER MANAGEMENT FRONTEND
  CustomerManagementFrontendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref CustomerManagementFrontendName
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Cpu: 256
      Memory: 512
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        OperatingSystemFamily: LINUX
        CpuArchitecture: ARM64
      ContainerDefinitions:
        - Name: !Ref CustomerManagementFrontendName
          Image: 063725538836.dkr.ecr.eu-central-1.amazonaws.com/customer-management-frontend:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: eu-central-1
              awslogs-stream-prefix: !Ref CustomerManagementFrontendName
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
  CustomerManagementFrontendECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Ref CustomerManagementFrontendName
      TaskDefinition: !Ref CustomerManagementFrontendTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
#            - !Ref FrontendSecurityGroup
            - !Ref BackendSecurityGroup
          Subnets:
            - !Ref Subnet


  # CUSTOMER SELF SERVICE FRONTEND
  CustomerSelfServiceFrontendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref CustomerSelfServiceFrontendName
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Cpu: 256
      Memory: 512
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        OperatingSystemFamily: LINUX
        CpuArchitecture: ARM64
      ContainerDefinitions:
        - Name: !Ref CustomerSelfServiceFrontendName
          Image: 063725538836.dkr.ecr.eu-central-1.amazonaws.com/customer-self-service-frontend:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: eu-central-1
              awslogs-stream-prefix: !Ref CustomerSelfServiceFrontendName
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
  CustomerSelfServiceFrontendECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Ref CustomerSelfServiceFrontendName
      TaskDefinition: !Ref CustomerSelfServiceFrontendTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
#            - !Ref FrontendSecurityGroup
            - !Ref BackendSecurityGroup
          Subnets:
            - !Ref Subnet


  # POLICY MANAGEMENT FRONTEND
  PolicyManagementFrontendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref PolicyManagementFrontendName
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Cpu: 256
      Memory: 512
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        OperatingSystemFamily: LINUX
        CpuArchitecture: ARM64
      ContainerDefinitions:
        - Name: !Ref PolicyManagementFrontendName
          Image: 063725538836.dkr.ecr.eu-central-1.amazonaws.com/policy-management-frontend:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: eu-central-1
              awslogs-stream-prefix: !Ref PolicyManagementFrontendName
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
  PolicyManagementFrontendECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Ref PolicyManagementFrontendName
      TaskDefinition: !Ref PolicyManagementFrontendTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
#            - !Ref FrontendSecurityGroup
            - !Ref BackendSecurityGroup
          Subnets:
            - !Ref Subnet
