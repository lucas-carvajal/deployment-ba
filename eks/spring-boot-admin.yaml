apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-admin
  namespace: lakeside
  labels:
    app: spring-boot-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-boot-admin
  template:
    metadata:
      labels:
        app: spring-boot-admin
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
      nodeSelector:
        subnet: public
      containers:
        - image: 063725538836.dkr.ecr.eu-central-1.amazonaws.com/spring-boot-admin:latest
          imagePullPolicy: Always
          name: spring-boot-admin
          ports:
            - containerPort: 9000
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-admin
  namespace: lakeside
spec:
  selector:
    app: spring-boot-admin
  ports:
    - name: "9000"
      port: 9000
      targetPort: 9000
  type: LoadBalancer
#  loadBalancerIP: 34.65.192.94
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spring-boot-admin-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: spring-boot-admin
                port:
                  number: 9000
